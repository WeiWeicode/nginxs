{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"jumbotron\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Card = _resolveComponent(\"Card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"header\", _hoisted_2, [_createElementVNode(\"h5\", null, _toDisplayString($data.content), 1 /* TEXT */)]), _createVNode(_component_Card)]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;AAAW;;EACZA,KAAK,EAAC;AAAW;;;uBAD3BC,oBAKM,OALNC,UAKM,GAJJC,oBAES,UAFTC,UAES,GADPD,oBAAsB,6BAAfE,aAAO,oBAEhBC,aAAaC","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$data","_createVNode","_component_Card"],"sourceRoot":"","sources":["D:\\sshstudiocode\\Vue\\vue-3-authentication-jwt\\src\\components\\Home.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <header class=\"jumbotron\">\r\n        <h5>{{ content }}</h5>        \r\n      </header>\r\n      <Card></Card>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import UserService from \"../services/user.service\";\r\n  import Card from \"./package/Card.vue\";\r\n  // 引用services/user.service.js\r\n\r\n  export default {\r\n    name: \"Home\",\r\n    components: {\r\n      Card,\r\n    },\r\n    data() {\r\n      return {\r\n        content: \"\",\r\n      };\r\n    },\r\n    mounted() {\r\n      UserService.getPublicContent().then(\r\n        // userService.getPublicContent(): 取得/services/user.service getPublicContent公開的內容\r\n        (response) => {\r\n          this.content = response.data;\r\n        },\r\n        (error) => {\r\n          this.content =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n        }\r\n      );\r\n    },\r\n  };\r\n  </script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}