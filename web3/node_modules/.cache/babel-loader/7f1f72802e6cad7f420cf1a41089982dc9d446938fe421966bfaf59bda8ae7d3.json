{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Form, Field, ErrorMessage } from \"vee-validate\";\nimport * as yup from \"yup\";\n// vee-validate: 一個Vue.js 2.x的表單驗證套件\n// yup: 一個JavaScript對象驗證器和對象模式解析器。在「Submit」與「實際送出」之間，加入一個「檢核」的流程。\n\nexport default {\n  name: \"Register\",\n  components: {\n    Form,\n    Field,\n    ErrorMessage\n  },\n  data() {\n    const schema = yup.object().shape({\n      username: yup.string().required(\"Username is required!\").min(3, \"Must be at least 3 characters!\").max(20, \"Must be maximum 20 characters!\"),\n      email: yup.string().required(\"Email is required!\").email(\"Email is invalid!\").max(50, \"Must be maximum 50 characters!\"),\n      password: yup.string().required(\"Password is required!\").min(6, \"Must be at least 6 characters!\").max(40, \"Must be maximum 40 characters!\")\n    });\n    // yup.object().shape(): 建立一個「檢核」的物件\n    // yup.string(): 檢核「字串」\n    // yup.string().required(): 檢核「字串」是否為必填\n    // yup.string().required().min(3).max(20): 檢核「字串」是否為必填，且最少要有3個字元，最多20個字元\n    // yup.string().required().email(): 檢核「字串」是否為必填，且必須是email格式\n\n    return {\n      successful: false,\n      loading: false,\n      message: \"\",\n      schema\n    };\n    // successful: 是否成功\n    // loading: 是否正在載入\n    // message: 訊息\n    // schema: 檢核的物件\n  },\n\n  computed: {\n    loggedIn() {\n      return this.$store.state.auth.status.loggedIn;\n    }\n    // loggedIn: 是否已登入\n    // return this.$store.state.auth.status.loggedIn: 取得「是否已登入」的狀態\n  },\n\n  mounted() {\n    if (this.loggedIn) {\n      this.$router.push(\"/profile\");\n    }\n    // 如果已登入，則導向「個人資料」頁面\n  },\n\n  methods: {\n    handleRegister(user) {\n      this.message = \"\";\n      this.successful = false;\n      this.loading = true;\n      // handleRegister: 處理「註冊」\n      // user: 使用者資料\n      // this.message = \"\": 訊息為空\n      // this.successful = false: 是否成功為否\n      // this.loading = true: 是否正在載入為是\n\n      this.$store.dispatch(\"auth/register\", user).then(data => {\n        this.message = data.message;\n        this.successful = true;\n        this.loading = false;\n      }, error => {\n        this.message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        this.successful = false;\n        this.loading = false;\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AAuCA,SAASA,IAAI,EAAEC,KAAK,EAAEC,YAAW,QAAS,cAAc;AACxD,OAAO,KAAKC,GAAE,MAAO,KAAK;AAC1B;AACA;;AAEA,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACVL,IAAI;IACJC,KAAK;IACLC;EACF,CAAC;EACDI,IAAI,GAAG;IACL,MAAMC,MAAK,GAAIJ,GAAG,CAACK,MAAM,EAAE,CAACC,KAAK,CAAC;MAChCC,QAAQ,EAAEP,GAAE,CACTQ,MAAM,EAAC,CACPC,QAAQ,CAAC,uBAAuB,EAChCC,GAAG,CAAC,CAAC,EAAE,gCAAgC,EACvCC,GAAG,CAAC,EAAE,EAAE,gCAAgC,CAAC;MAC5CC,KAAK,EAAEZ,GAAE,CACNQ,MAAM,EAAC,CACPC,QAAQ,CAAC,oBAAoB,EAC7BG,KAAK,CAAC,mBAAmB,EACzBD,GAAG,CAAC,EAAE,EAAE,gCAAgC,CAAC;MAC5CE,QAAQ,EAAEb,GAAE,CACTQ,MAAM,EAAC,CACPC,QAAQ,CAAC,uBAAuB,EAChCC,GAAG,CAAC,CAAC,EAAE,gCAAgC,EACvCC,GAAG,CAAC,EAAE,EAAE,gCAAgC;IAC7C,CAAC,CAAC;IACF;IACA;IACA;IACA;IACA;;IAEA,OAAO;MACLG,UAAU,EAAE,KAAK;MACjBC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE,EAAE;MACXZ;IACF,CAAC;IACD;IACA;IACA;IACA;EACF,CAAC;;EACDa,QAAQ,EAAE;IACRC,QAAQ,GAAG;MACT,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,CAACJ,QAAQ;IAC/C;IACA;IACA;EACF,CAAC;;EACDK,OAAO,GAAG;IACR,IAAI,IAAI,CAACL,QAAQ,EAAE;MACjB,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC;IAC/B;IACA;EACF,CAAC;;EACDC,OAAO,EAAE;IACPC,cAAc,CAACC,IAAI,EAAE;MACnB,IAAI,CAACZ,OAAM,GAAI,EAAE;MACjB,IAAI,CAACF,UAAS,GAAI,KAAK;MACvB,IAAI,CAACC,OAAM,GAAI,IAAI;MACnB;MACA;MACA;MACA;MACA;;MAEA,IAAI,CAACI,MAAM,CAACU,QAAQ,CAAC,eAAe,EAAED,IAAI,CAAC,CAACE,IAAI,CAC7C3B,IAAI,IAAK;QACR,IAAI,CAACa,OAAM,GAAIb,IAAI,CAACa,OAAO;QAC3B,IAAI,CAACF,UAAS,GAAI,IAAI;QACtB,IAAI,CAACC,OAAM,GAAI,KAAK;MACtB,CAAC,EACAgB,KAAK,IAAK;QACT,IAAI,CAACf,OAAM,GACRe,KAAK,CAACC,QAAO,IACZD,KAAK,CAACC,QAAQ,CAAC7B,IAAG,IAClB4B,KAAK,CAACC,QAAQ,CAAC7B,IAAI,CAACa,OAAO,IAC7Be,KAAK,CAACf,OAAM,IACZe,KAAK,CAACE,QAAQ,EAAE;QAClB,IAAI,CAACnB,UAAS,GAAI,KAAK;QACvB,IAAI,CAACC,OAAM,GAAI,KAAK;MACtB,EACD;IACH;EACF;AACF,CAAC","names":["Form","Field","ErrorMessage","yup","name","components","data","schema","object","shape","username","string","required","min","max","email","password","successful","loading","message","computed","loggedIn","$store","state","auth","status","mounted","$router","push","methods","handleRegister","user","dispatch","then","error","response","toString"],"sourceRoot":"","sources":["D:\\sshstudiocode\\Vue\\vue-3-authentication-jwt\\src\\components\\Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"col-md-12\">\r\n    <div class=\"card card-container\">\r\n      <img id=\"profile-img\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" class=\"profile-img-card\" />\r\n      <Form @submit=\"handleRegister\" :validation-schema=\"schema\">\r\n        <div v-if=\"!successful\">\r\n          <div class=\"form-group\">\r\n            <label for=\"username\">Username</label>\r\n            <Field name=\"username\" type=\"text\" class=\"form-control\" />\r\n            <ErrorMessage name=\"username\" class=\"error-feedback\" />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">Email</label>\r\n            <Field name=\"email\" type=\"email\" class=\"form-control\" />\r\n            <ErrorMessage name=\"email\" class=\"error-feedback\" />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"password\">Password</label>\r\n            <Field name=\"password\" type=\"password\" class=\"form-control\" />\r\n            <ErrorMessage name=\"password\" class=\"error-feedback\" />            \r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <button class=\"btn btn-primary btn-block\" :disabled=\"loading\">\r\n              <span v-show=\"loading\" class=\"spinner-border spinner-border-sm\"></span>\r\n              Sign Up\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n\r\n      <div v-if=\"message\" class=\"alert\" :class=\"successful ? 'alert-success' : 'alert-danger'\">\r\n        {{ message }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport { Form, Field, ErrorMessage } from \"vee-validate\";\r\nimport * as yup from \"yup\";\r\n// vee-validate: 一個Vue.js 2.x的表單驗證套件\r\n// yup: 一個JavaScript對象驗證器和對象模式解析器。在「Submit」與「實際送出」之間，加入一個「檢核」的流程。\r\n\r\nexport default {\r\n  name: \"Register\",\r\n  components: {\r\n    Form,\r\n    Field,\r\n    ErrorMessage,\r\n  },\r\n  data() {\r\n    const schema = yup.object().shape({\r\n      username: yup\r\n        .string()\r\n        .required(\"Username is required!\")\r\n        .min(3, \"Must be at least 3 characters!\")\r\n        .max(20, \"Must be maximum 20 characters!\"),\r\n      email: yup\r\n        .string()\r\n        .required(\"Email is required!\")\r\n        .email(\"Email is invalid!\")\r\n        .max(50, \"Must be maximum 50 characters!\"),\r\n      password: yup\r\n        .string()\r\n        .required(\"Password is required!\")\r\n        .min(6, \"Must be at least 6 characters!\")\r\n        .max(40, \"Must be maximum 40 characters!\"),\r\n    });\r\n    // yup.object().shape(): 建立一個「檢核」的物件\r\n    // yup.string(): 檢核「字串」\r\n    // yup.string().required(): 檢核「字串」是否為必填\r\n    // yup.string().required().min(3).max(20): 檢核「字串」是否為必填，且最少要有3個字元，最多20個字元\r\n    // yup.string().required().email(): 檢核「字串」是否為必填，且必須是email格式\r\n\r\n    return {\r\n      successful: false,\r\n      loading: false,\r\n      message: \"\",\r\n      schema,\r\n    };\r\n    // successful: 是否成功\r\n    // loading: 是否正在載入\r\n    // message: 訊息\r\n    // schema: 檢核的物件\r\n  },\r\n  computed: {\r\n    loggedIn() {\r\n      return this.$store.state.auth.status.loggedIn;\r\n    },\r\n    // loggedIn: 是否已登入\r\n    // return this.$store.state.auth.status.loggedIn: 取得「是否已登入」的狀態\r\n  },\r\n  mounted() {\r\n    if (this.loggedIn) {\r\n      this.$router.push(\"/profile\");\r\n    }\r\n    // 如果已登入，則導向「個人資料」頁面\r\n  },\r\n  methods: {\r\n    handleRegister(user) {\r\n      this.message = \"\";\r\n      this.successful = false;\r\n      this.loading = true;\r\n      // handleRegister: 處理「註冊」\r\n      // user: 使用者資料\r\n      // this.message = \"\": 訊息為空\r\n      // this.successful = false: 是否成功為否\r\n      // this.loading = true: 是否正在載入為是\r\n\r\n      this.$store.dispatch(\"auth/register\", user).then(\r\n        (data) => {\r\n          this.message = data.message;\r\n          this.successful = true;\r\n          this.loading = false;\r\n        },\r\n        (error) => {\r\n          this.message =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n          this.successful = false;\r\n          this.loading = false;\r\n        }\r\n      );\r\n    },\r\n  },\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\nlabel {\r\n  display: block;\r\n  margin-top: 10px;\r\n}\r\n\r\n.card-container.card {\r\n  max-width: 350px !important;\r\n  padding: 40px 40px;\r\n}\r\n\r\n.card {\r\n  background-color: #f7f7f7;\r\n  padding: 20px 25px 30px;\r\n  margin: 0 auto 25px;\r\n  margin-top: 50px;\r\n  -moz-border-radius: 2px;\r\n  -webkit-border-radius: 2px;\r\n  border-radius: 2px;\r\n  -moz-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\r\n  -webkit-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\r\n  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.profile-img-card {\r\n  width: 96px;\r\n  height: 96px;\r\n  margin: 0 auto 10px;\r\n  display: block;\r\n  -moz-border-radius: 50%;\r\n  -webkit-border-radius: 50%;\r\n  border-radius: 50%;\r\n}\r\n\r\n.error-feedback {\r\n  color: red;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}