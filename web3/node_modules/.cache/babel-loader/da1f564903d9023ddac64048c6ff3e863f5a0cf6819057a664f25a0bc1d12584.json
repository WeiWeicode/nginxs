{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"row row-cols-1 row-cols-md-3 g-4\"\n};\nconst _hoisted_2 = {\n  class: \"card-title\"\n};\nconst _hoisted_3 = {\n  class: \"card-text\"\n};\nconst _hoisted_4 = {\n  class: \"card-text\"\n};\nconst _hoisted_5 = {\n  class: \"card-text\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <div>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" v-model=\\\"titleSearch\\\" pl aceholder=\\\"Search\\\" />\\r\\n        \\r\\n        \\r\\n    </div>\\r\\n    <div class=\\\"row row-cols-1 row-cols-md-3 g-4\\\">\\r\\n        <div class=\\\"col\\\" v-for=\\\"product in ProductsTable\\\" :key=\\\"product.id\\\">\\r\\n            <div class=\\\"card h-100\\\" style=\\\"width: 15rem;\\\">\\r\\n                <img :src=\\\"path + product.image\\\" class=\\\"card-img-top\\\" alt=\\\"\\\"> \"), _createCommentVNode(\" `http://localhost:3000/${productImage}` \"), _createCommentVNode(\" <div class=\\\"card-body\\\">\\r\\n                    <h5 class=\\\"card-title\\\">{{ product.title }}</h5>\\r\\n                    <p class=\\\"card-text\\\">{{ product.description }}</p>\\r\\n                    <p class=\\\"card-text\\\">{{ product.price }}</p>\\r\\n                    <p class=\\\"card-text\\\">{{ product.published }}</p>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic mixed styles example\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\">購物車</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div> \"), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.titleSearch = $event),\n    placeholder: \"Search\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.titleSearch]])]), _createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.ProductsTable, product => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"col\",\n      key: product.id\n    }, [_createElementVNode(\"h5\", _hoisted_2, _toDisplayString(product.title), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_3, _toDisplayString(product.description), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_4, _toDisplayString(product.price), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_5, _toDisplayString(product.published), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EA6BSA,KAAK,EAAC;AAAkC;;EAEjCA,KAAK,EAAC;AAAY;;EACXA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAW;;6DAjCpCC,qdAQ6E,EACjEA,gEAAgD,EAChDA,ioBAYF,EAEVC,oBAGM,8BAFFA,oBAAqF;IAA9EC,IAAI,EAAC,MAAM;IAACH,KAAK,EAAC,cAAc;+DAAUI,kBAAW;IAAEC,WAAW,EAAC;iDAAzBD,kBAAW,OAGhEF,oBAQM,OARNI,UAQM,sBAPFC,oBAKMC,6BAL6BJ,oBAAa,EAAxBK,OAAO;yBAA/BF,oBAKM;MALDP,KAAK,EAAC,KAAK;MAAmCU,GAAG,EAAED,OAAO,CAACE;QAC5DT,oBAA+C,MAA/CU,UAA+C,mBAArBH,OAAO,CAACI,KAAK,kBAC/BX,oBAAkD,KAAlDY,UAAkD,mBAA1BL,OAAO,CAACM,WAAW,kBAC3Cb,oBAA4C,KAA5Cc,UAA4C,mBAApBP,OAAO,CAACQ,KAAK,kBACrCf,oBAAgD,KAAhDgB,UAAgD,mBAAxBT,OAAO,CAACU,SAAS","names":["class","_createCommentVNode","_createElementVNode","type","$setup","placeholder","_hoisted_1","_createElementBlock","_Fragment","product","key","id","_hoisted_2","title","_hoisted_3","description","_hoisted_4","price","_hoisted_5","published"],"sourceRoot":"","sources":["D:\\sshstudiocode\\Vue\\vue-3-authentication-jwt\\src\\components\\package\\Card.vue"],"sourcesContent":["<template>\r\n    <!-- <div>\r\n        <input type=\"text\" class=\"form-control\" v-model=\"titleSearch\" pl aceholder=\"Search\" />\r\n        \r\n        \r\n    </div>\r\n    <div class=\"row row-cols-1 row-cols-md-3 g-4\">\r\n        <div class=\"col\" v-for=\"product in ProductsTable\" :key=\"product.id\">\r\n            <div class=\"card h-100\" style=\"width: 15rem;\">\r\n                <img :src=\"path + product.image\" class=\"card-img-top\" alt=\"\"> -->\r\n                <!-- `http://localhost:3000/${productImage}` -->\r\n                <!-- <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">{{ product.title }}</h5>\r\n                    <p class=\"card-text\">{{ product.description }}</p>\r\n                    <p class=\"card-text\">{{ product.price }}</p>\r\n                    <p class=\"card-text\">{{ product.published }}</p>\r\n\r\n                </div>\r\n                <div class=\"btn-group\" role=\"group\" aria-label=\"Basic mixed styles example\">\r\n                    <button type=\"button\" class=\"btn btn-success\">購物車</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div> -->\r\n\r\n    <div>\r\n        <input type=\"text\" class=\"form-control\" v-model=\"titleSearch\" placeholder=\"Search\" />\r\n\r\n    </div>\r\n    <div class=\"row row-cols-1 row-cols-md-3 g-4\">\r\n        <div class=\"col\" v-for=\"product in ProductsTable\" :key=\"product.id\">\r\n            <h5 class=\"card-title\">{{ product.title }}</h5>\r\n                    <p class=\"card-text\">{{ product.description }}</p>\r\n                    <p class=\"card-text\">{{ product.price }}</p>\r\n                    <p class=\"card-text\">{{ product.published }}</p>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</template>\r\n\r\n<script steup>\r\nimport { computed } from \"@vue/reactivity\";\r\nimport { ref, reactive, onMounted } from \"vue\";\r\nimport axios from \"axios\";\r\n// 引用axios\r\n\r\nexport default {\r\n    name: \"Products\",\r\n    setup() {\r\n        const path = \"http://192.168.68.60:8082/\";\r\n        const ProductsTable = ref([]);\r\n        const titleSearch = ref(\"\");\r\n        // 這邊是用來搜尋的\r\n\r\n        const getProducts = async () => {\r\n            const { data } = await axios.get(\"http://192.168.68.60:8082/api/products/allProducts\");\r\n            ProductsTable.value = data;\r\n        };\r\n        // 這邊是用來抓取資料的\r\n\r\n        onMounted(getProducts);\r\n        // 這邊是用來抓取資料的\r\n\r\n        const filteredProducts = computed(() => {\r\n            return ProductsTable.value.filter((product) => {\r\n                return product.title.toLowerCase().includes(titleSearch.value.toLowerCase());\r\n            });\r\n        });\r\n        // 這邊是用來搜尋的\r\n\r\n        return {\r\n            path,\r\n            ProductsTable,\r\n            titleSearch,\r\n            filteredProducts,\r\n        };\r\n    },\r\n};\r\n\r\n// export default {\r\n//     data() {\r\n//         return {\r\n            \r\n//                 title: 'test2',\r\n//                 // price: \"\",\r\n//                 // description: \"\",\r\n//                 // published: \"\",\r\n//                 // image: \"\",\r\n//                 titleSearch: \"\",\r\n//                 ProductsTable: null,\r\n//                 path: \"http://192.168.68.60:8082/\"\r\n//                 // paht: 照片路徑使用\r\n            \r\n//         };\r\n\r\n//     },\r\n\r\n//     mounted: function () {\r\n//         axios\r\n//             .get(\"http://192.168.68.60:8082/api/products/allProducts\")\r\n//             // 發出取得請求\r\n//             .then((response) => {\r\n//                 // 取得回應後的處理\r\n//                 console.log(response);\r\n//                 // 這裡的response是API回傳的資料\r\n//                 this.ProductsTable = response.data;\r\n//             })\r\n//             .catch((error) => {\r\n//                 // 發生錯誤時的處理\r\n//                 console.log(error);\r\n//             });\r\n//     },\r\n\r\n\r\n//     computed:{\r\n//         filteredList(){\r\n//             return this.ProductsTable.filter((product) => {\r\n//                 return product.title.toLowerCase().includes(this.titleSearch.toLowerCase());\r\n//             });\r\n\r\n//         }\r\n\r\n//     }\r\n\r\n\r\n\r\n// };\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}