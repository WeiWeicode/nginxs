{"ast":null,"code":"import { thisExpression } from \"@babel/types\";\nimport axios from \"axios\";\n\n// 引用axios\nexport default {\n  data() {\n    return {\n      id: '',\n      title: '',\n      // price: \"\",\n      // description: \"\",            \n      // image: \"\",\n      published: true,\n      // true:產品上架\n      ProductsTable: [],\n      // ProductsTable: 產品get資料表\n      titleSearch: '',\n      // titleSearch: 搜尋的標題 先給空值 也可以預設值\n      path: \"http://192.168.68.60:8082/\"\n      // paht: 照片路徑使用\n    };\n  },\n\n  mounted: function () {\n    axios.get(\"http://192.168.68.60:8082/api/products/allProducts\")\n    // 發出取得請求\n    .then(response => {\n      // 取得回應後的處理\n      console.log(response);\n      // 這裡的response是API回傳的資料\n      this.ProductsTable = response.data;\n    }).catch(error => {\n      // 發生錯誤時的處理\n      console.log(error);\n    });\n  },\n  methods: {\n    addShoppingCart(title) {\n      // localStorage.setItem('Products', JSON.stringify(this.ProductsTable))\n      // 寫入全部產品資料到localStorage\n      // let title  = this.ProductsTable.filter((item) => item.title === this.title)\n\n      localStorage.setItem('Products', JSON.stringify(title));\n      // 寫入單一產品資料到localStorage\n    }\n  },\n\n  computed: {\n    // computed: 計算屬性\n    ProductsTable() {\n      // ProductsTable: 資料表\n      return this.ProductsTable.filter(searchResult => searchResult.title.match(this.titleSearch) && searchResult.published == this.published);\n      // return: 一定要有回傳的值\n      // this.ProductsTable: 查ProductsTable\n      // filter: 篩選\n      // searchResult: 搜尋結果            \n      // searchResult.title: 搜尋結果的title\n      // match: 符合\n      // this.titleSearch: 輸入值titleSearch(input v-model=\"titleSearch\")\n      // &&: 且\n      // searchResult.published == this.published: 搜尋結果的published == 輸入值published(參考data)\n    }\n  }\n};","map":{"version":3,"mappings":"AA6BA,SAASA,cAAa,QAAS,cAAc;AAC7C,OAAOC,KAAI,MAAO,OAAO;;AAIzB;AACA,eAAe;EAEXC,IAAI,GAAG;IACH,OAAO;MACHC,EAAE,EAAE,EAAE;MACNC,KAAK,EAAE,EAAE;MAET;MACA;MACA;MACAC,SAAS,EAAE,IAAI;MACf;MACAC,aAAa,EAAE,EAAE;MACjB;MACAC,WAAW,EAAE,EAAE;MACf;MACAC,IAAI,EAAE;MACN;IACJ,CAAC;EACL,CAAC;;EAEDC,OAAO,EACP,YAAY;IACRR,KAAI,CACCS,GAAG,CAAC,oDAAoD;IACzD;IAAA,CACCC,IAAI,CAAEC,QAAQ,IAAK;MAChB;MACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB;MACA,IAAI,CAACN,aAAY,GAAIM,QAAQ,CAACV,IAAI;IAEtC,CAAC,EACAa,KAAK,CAAEC,KAAK,IAAK;MACd;MACAH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACtB,CAAC,CAAC;EACV,CAAC;EAEDC,OAAO,EAAC;IACJC,eAAe,CAACd,KAAK,EAAE;MACnB;MACA;MACA;;MAGAe,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAAClB,KAAK,CAAC;MACtD;IAEJ;EACJ,CAAC;;EACDmB,QAAQ,EAAE;IACN;IACAjB,aAAa,GAAG;MACZ;MACA,OAAO,IAAI,CAACA,aAAa,CAACkB,MAAK,CAC9BC,YAAW,IAAKA,YAAY,CAACrB,KAAK,CAACsB,KAAK,CAAC,IAAI,CAACnB,WAAW,KAAKkB,YAAY,CAACpB,SAAQ,IAAK,IAAI,CAACA,SAAS,CAAC;MACxG;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ;EACJ;AACJ,CAAC","names":["thisExpression","axios","data","id","title","published","ProductsTable","titleSearch","path","mounted","get","then","response","console","log","catch","error","methods","addShoppingCart","localStorage","setItem","JSON","stringify","computed","filter","searchResult","match"],"sourceRoot":"","sources":["D:\\sshstudiocode\\Vue\\vue-3-authentication-jwt\\src\\components\\package\\Card.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <input type=\"text\" class=\"form-control\" v-model=\"titleSearch\" pl aceholder=\"Search\" />\r\n    </div>\r\n    <div id=\"Products\" class=\"row row-cols-1 row-cols-md-3 g-4\">\r\n        <div class=\"col\" v-for=\"product in ProductsTable\" :key=\"product.id\">\r\n            <div class=\"card h-100\" style=\"width: 17rem;\">\r\n                <img :src=\"path + product.image\" class=\"card-img-top\" alt=\"\">\r\n                <!-- `http://localhost:3000/${productImage}` -->\r\n                <div class=\"card-body\">\r\n                    <H5 class=\"card-title\">{{ product.title }}</H5>\r\n                    <p class=\"card-text\">{{ product.description }}</p>\r\n                    <p class=\"card-text\">{{ product.price }}</p>\r\n                    <p class=\"card-text\">{{ product.published }}</p>\r\n                    <div class=\"btn-group\" role=\"group\" aria-label=\"Basic mixed styles example\">\r\n                    <button @click=\"addShoppingCart(ProductsTable, {title})\" type=\"button\" class=\"btn btn-success\" >購物車</button>\r\n                </div>\r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport { thisExpression } from \"@babel/types\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\n// 引用axios\r\nexport default {\r\n    \r\n    data() {\r\n        return {\r\n            id: '',\r\n            title: '',\r\n           \r\n            // price: \"\",\r\n            // description: \"\",            \r\n            // image: \"\",\r\n            published: true,\r\n            // true:產品上架\r\n            ProductsTable: [],\r\n            // ProductsTable: 產品get資料表\r\n            titleSearch: '',            \r\n            // titleSearch: 搜尋的標題 先給空值 也可以預設值\r\n            path: \"http://192.168.68.60:8082/\"\r\n            // paht: 照片路徑使用\r\n        };\r\n    },\r\n\r\n    mounted: \r\n    function () {\r\n        axios\r\n            .get(\"http://192.168.68.60:8082/api/products/allProducts\")\r\n            // 發出取得請求\r\n            .then((response) => {\r\n                // 取得回應後的處理\r\n                console.log(response);\r\n                // 這裡的response是API回傳的資料\r\n                this.ProductsTable = response.data;\r\n\r\n            })\r\n            .catch((error) => {\r\n                // 發生錯誤時的處理\r\n                console.log(error);\r\n            });\r\n    },\r\n\r\n    methods:{\r\n        addShoppingCart(title) {\r\n            // localStorage.setItem('Products', JSON.stringify(this.ProductsTable))\r\n            // 寫入全部產品資料到localStorage\r\n            // let title  = this.ProductsTable.filter((item) => item.title === this.title)\r\n            \r\n\r\n            localStorage.setItem('Products', JSON.stringify(title))\r\n            // 寫入單一產品資料到localStorage\r\n\r\n        },\r\n    },\r\n    computed: {\r\n        // computed: 計算屬性\r\n        ProductsTable() {\r\n            // ProductsTable: 資料表\r\n            return this.ProductsTable.filter\r\n            (searchResult => searchResult.title.match(this.titleSearch) && searchResult.published == this.published);\r\n            // return: 一定要有回傳的值\r\n            // this.ProductsTable: 查ProductsTable\r\n            // filter: 篩選\r\n            // searchResult: 搜尋結果            \r\n            // searchResult.title: 搜尋結果的title\r\n            // match: 符合\r\n            // this.titleSearch: 輸入值titleSearch(input v-model=\"titleSearch\")\r\n            // &&: 且\r\n            // searchResult.published == this.published: 搜尋結果的published == 輸入值published(參考data)\r\n        }\r\n    },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}