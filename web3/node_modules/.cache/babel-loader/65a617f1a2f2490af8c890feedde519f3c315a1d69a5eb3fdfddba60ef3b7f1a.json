{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import { thisExpression } from \"@babel/types\";\nimport axios from \"axios\";\nimport Paginate from 'vuejs-paginate-next';\n// 引用axios\n\nexport default {\n  data() {\n    return {\n      PriceTotle: 0,\n      // PriceTotle: 購物車總價\n\n      page: 1,\n      // page: 目前頁數\n\n      shoppingCartTotal: '',\n      // shoppingCartTotal: 購物車總數\n      published: true,\n      // true:產品上架\n      ProductsTable: [],\n      // ProductsTable: 產品get資料表\n      allshoppCart: [],\n      // shoppingCart: 購物車資料表(local)\n      shoppingCart: [],\n      titleSearch: '',\n      // titleSearch: 搜尋的標題 先給空值 也可以預設值\n      path: \"http://192.168.68.60:8082/\"\n      // paht: 照片路徑使用\n    };\n  },\n\n  components: {\n    paginate: Paginate\n  },\n  mounted: function () {\n    axios.get(\"http://192.168.68.60:8082/api/products/allProducts\")\n    // 發出取得請求\n    .then(response => {\n      // 取得回應後的處理\n      console.log(response);\n      // 這裡的response是API回傳的資料\n      this.ProductsTable = response.data;\n    }).catch(error => {\n      // 發生錯誤時的處理\n      console.log(error);\n    });\n    let shoppingCartTotal = JSON.parse(localStorage.getItem('ShoppingCart'));\n    if (localStorage.getItem('ShoppingCart') !== null) {\n      this.shoppingCartTotal = shoppingCartTotal.length;\n      this.allshoppCart = shoppingCartTotal;\n    } else {\n      this.shoppingCartTotal = 0;\n    }\n    // 取得shoppingcart localStorage資料\n  },\n\n  methods: {\n    // methods: 方法\n    addShoppingCart(i)\n    // addShoppingCart: 加入購物車\n    // i: 產品資料\n    {\n      // localStorage.setItem('Products', JSON.stringify(this.ProductsTable))\n      // 寫入全部產品資料到localStorage         \n      let Products = JSON.parse(localStorage.getItem('ShoppingCart'));\n      if (localStorage.getItem('ShoppingCart') !== null)\n        // 在localStorage裡面找ShoppingCart 不等於 空值 \n        // !==: 不等於\n        // null: 空值\n        {\n          if (Products.some(item => item.id === i.id)) return;\n          // products.some: 有沒有符合的 https://noob.tw/js-every-some/\n          // item.id === i.id: 有沒有相同的id 一樣的話就不加入\n          Products.push(i);\n          // push: 加入\n          localStorage.setItem('ShoppingCart', JSON.stringify(Products));\n          // localStorage.setItem: 寫入\n          // LocalStorage: 瀏覽器的資料庫(SpopingCart: 購物車)\n          // JSON.stringify: 轉成JSON格式\n        } else {\n        localStorage.setItem('ShoppingCart', JSON.stringify([i]));\n      }\n      let shoppingCartTotal = JSON.parse(localStorage.getItem('ShoppingCart'));\n      return this.shoppingCartTotal = shoppingCartTotal.length, this.allshoppCart = shoppingCartTotal;\n      // this.shoppingCartTotal: 點擊購物車按鈕後的購物車數量\n      // this.allshoppCart: 點擊購物車按鈕後的資料\n      // 用觸發事件的產品資料i去找localStorage裡面的ShoppingCart數量\n    },\n\n    shoppingcartToOrder() {\n      if (localStorage.getItem('user') !== null) {\n        // localStorage.getItem('user') !== null: localStorage裡面有user\n      } else {\n        this.$router.push('/login');\n        // 沒有user就this.$router.push: 跳轉頁面\n      }\n    },\n\n    // 先判斷localStorage裡面有沒有user\n    // 有的話就跳轉到訂單頁面\n    // 沒有的話就跳轉到登入頁面\n\n    deleteShoppingCart(i) {\n      let Products = JSON.parse(localStorage.getItem('ShoppingCart'));\n      // 取得localStorage裡面的ShoppingCart資料\n      let ProductsId = Products.map(item => item.id);\n      // Products.map: 把Products裡面的id取出來\n\n      let index = ProductsId.indexOf(i);\n      // index2: 找到i的位置 \n\n      // 以下是測試用,看變數的狀態\n      // let index = ProductsId\n      // index: 找到i的位置\n      // let index1 = i\n      // indexOf: 找到i的位置\n      // 原本用JOSN.parse(localStorage.getItem('ShoppingCart'))取得的資料是陣列,\n      // ProductsId取id字串\n      // 然後用indexOf找id的位置\n      // 最後用splice刪除\n\n      Products.splice(index, 1);\n      // splice: 刪除\n      localStorage.setItem('ShoppingCart', JSON.stringify(Products));\n      // 寫入localStorage\n      let shoppingCartTotal = JSON.parse(localStorage.getItem('ShoppingCart'));\n      return this.shoppingCartTotal = shoppingCartTotal.length, this.allshoppCart = shoppingCartTotal;\n      // this.shoppingCartTotal: 點擊購物車按鈕後的購物車數量\n      // this.allshoppCart: 點擊購物車按鈕後的資料\n      // 用觸發事件的產品資料i去找localStorage裡面的ShoppingCart數量\n    },\n\n    shoppingCartPriceTotle() {\n      let Products = JSON.parse(localStorage.getItem('ShoppingCart'));\n      // 取得localStorage裡面的ShoppingCart資料\n      let ProductsPrice = Products.map(item => item.price);\n      // Products.map: 把Products裡面的price取出來\n      let ProductsPriceTotle = ProductsPrice.reduce((a, b) => a + b, 0);\n      // ProductsPrice.reduce: 把ProductsPrice裡面的值加總\n      // a: 前一個值\n      // b: 後一個值\n      // 0: 初始值\n      return this.PriceTotle = ProductsPriceTotle;\n      // this.shoppingCartPriceTotle: 購物車總價\n      // ProductsPriceTotle: 購物車總價\n    },\n\n    handlePageChange(value) {\n      this.page = value;\n    }\n  },\n  computed: {\n    // computed: 計算屬性\n    ProductsTable() {\n      // ProductsTable: 資料表\n      return this.ProductsTable.filter(searchResult => searchResult.title.match(this.titleSearch) && searchResult.published == this.published);\n      // return: 一定要有回傳的值\n      // this.ProductsTable: 查ProductsTable\n      // filter: 篩選\n      // searchResult: 搜尋結果            \n      // searchResult.title: 搜尋結果的title\n      // match: 符合\n      // this.titleSearch: 輸入值titleSearch(input v-model=\"titleSearch\")\n      // &&: 且\n      // searchResult.published == this.published: 搜尋結果的published == 輸入值published(參考data)\n    }\n  }\n};","map":{"version":3,"mappings":";AAsGA;AACA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,QAAO,MAAO,qBAAqB;AAC1C;;AAEA,eAAe;EAEXC,IAAI,GAAG;IACH,OAAO;MACHC,UAAU,EAAE,CAAC;MACb;;MAEAC,IAAI,EAAE,CAAC;MACP;;MAMAC,iBAAiB,EAAE,EAAE;MACrB;MACAC,SAAS,EAAE,IAAI;MACf;MACAC,aAAa,EAAE,EAAE;MACjB;MACAC,YAAY,EAAE,EAAE;MAChB;MACAC,YAAY,EAAE,EAAE;MAEhBC,WAAW,EAAE,EAAE;MACf;MACAC,IAAI,EAAE;MACN;IACJ,CAAC;EACL,CAAC;;EACDC,UAAU,EAAC;IACPC,QAAQ,EAAEZ;EACd,CAAC;EAGDa,OAAO,EACH,YAAY;IACRd,KAAK,CAACe,GAAG,CAAC,oDAAoD;IAC1D;IAAA,CACCC,IAAI,CAAEC,QAAQ,IAAK;MAChB;MACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB;MACA,IAAI,CAACV,aAAY,GAAIU,QAAQ,CAACf,IAAI;IAEtC,CAAC,EACAkB,KAAK,CAAEC,KAAK,IAAK;MACd;MACAH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACtB,CAAC,CAAC;IAGN,IAAIhB,iBAAgB,GAAIiB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACvE,IAAID,YAAY,CAACC,OAAO,CAAC,cAAc,MAAM,IAAI,EAAE;MAC/C,IAAI,CAACpB,iBAAgB,GAAIA,iBAAiB,CAACqB,MAAK;MAChD,IAAI,CAAClB,YAAW,GAAIH,iBAAgB;IAExC,OACK;MACD,IAAI,CAACA,iBAAgB,GAAI;IAC7B;IACA;EAEJ,CAAC;;EAILsB,OAAO,EAAE;IACL;IACAC,eAAe,CAACC,CAAC;IACjB;IACA;IACA;MACI;MACA;MACA,IAAIC,QAAO,GAAIR,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAC9D,IAAID,YAAY,CAACC,OAAO,CAAC,cAAc,MAAM,IAAI;QACjD;QACA;QACA;QACA;UACI,IAAIK,QAAQ,CAACC,IAAI,CAACC,IAAG,IAAKA,IAAI,CAACC,EAAC,KAAMJ,CAAC,CAACI,EAAE,CAAC,EAAE;UAC7C;UACA;UACAH,QAAQ,CAACI,IAAI,CAACL,CAAC;UACf;UACAL,YAAY,CAACW,OAAO,CAAC,cAAc,EAAEb,IAAI,CAACc,SAAS,CAACN,QAAQ,CAAC;UAC7D;UACA;UACA;QAGJ,OACK;QACDN,YAAY,CAACW,OAAO,CAAC,cAAc,EAAEb,IAAI,CAACc,SAAS,CAAC,CAACP,CAAC,CAAC,CAAC;MAC5D;MAGA,IAAIxB,iBAAgB,GAAIiB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MACvE,OAAO,IAAI,CAACpB,iBAAgB,GAAIA,iBAAiB,CAACqB,MAAM,EAAE,IAAI,CAAClB,YAAW,GAAIH,iBAAgB;MAC9F;MACA;MACA;IAEJ,CAAC;;IAEDgC,mBAAmB,GAAG;MAClB,IAAIb,YAAY,CAACC,OAAO,CAAC,MAAM,MAAM,IAAI,EAAE;QACvC;MAAA,CAEJ,MACK;QACD,IAAI,CAACa,OAAO,CAACJ,IAAI,CAAC,QAAQ;QAC1B;MACJ;IACJ,CAAC;;IACD;IACA;IACA;;IAEAK,kBAAkB,CAACV,CAAC,EAAE;MAClB,IAAIC,QAAO,GAAIR,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAC9D;MACA,IAAIe,UAAS,GAAIV,QAAQ,CAACW,GAAG,CAACT,IAAG,IAAKA,IAAI,CAACC,EAAE;MAC7C;;MAEA,IAAIS,KAAI,GAAIF,UAAU,CAACG,OAAO,CAACd,CAAC;MAChC;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEAC,QAAQ,CAACc,MAAM,CAACF,KAAK,EAAE,CAAC;MACxB;MACAlB,YAAY,CAACW,OAAO,CAAC,cAAc,EAAEb,IAAI,CAACc,SAAS,CAACN,QAAQ,CAAC;MAC7D;MACA,IAAIzB,iBAAgB,GAAIiB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAIvE,OAAO,IAAI,CAACpB,iBAAgB,GAAIA,iBAAiB,CAACqB,MAAM,EAAE,IAAI,CAAClB,YAAW,GAAIH,iBAAgB;MAC9F;MACA;MACA;IAGJ,CAAC;;IAEDwC,sBAAsB,GAAG;MACrB,IAAIf,QAAO,GAAIR,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAC9D;MACA,IAAIqB,aAAY,GAAIhB,QAAQ,CAACW,GAAG,CAACT,IAAG,IAAKA,IAAI,CAACe,KAAK;MACnD;MACA,IAAIC,kBAAiB,GAAIF,aAAa,CAACG,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,IAAIC,CAAC,EAAE,CAAC;MAChE;MACA;MACA;MACA;MACA,OAAO,IAAI,CAAChD,UAAS,GAAI6C,kBAAiB;MAC1C;MACA;IACJ,CAAC;;IAEDI,gBAAgB,CAACC,KAAK,EAAE;MACpB,IAAI,CAACjD,IAAG,GAAIiD,KAAK;IAErB;EAGJ,CAAC;EACDC,QAAQ,EAAE;IACN;IACA/C,aAAa,GAAG;MACZ;MACA,OAAO,IAAI,CAACA,aAAa,CAACgD,MAAK,CAC1BC,YAAW,IAAKA,YAAY,CAACC,KAAK,CAACC,KAAK,CAAC,IAAI,CAAChD,WAAW,KAAK8C,YAAY,CAAClD,SAAQ,IAAK,IAAI,CAACA,SAAS,CAAC;MAC5G;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ;EAKJ;AAEJ,CAAC","names":["axios","Paginate","data","PriceTotle","page","shoppingCartTotal","published","ProductsTable","allshoppCart","shoppingCart","titleSearch","path","components","paginate","mounted","get","then","response","console","log","catch","error","JSON","parse","localStorage","getItem","length","methods","addShoppingCart","i","Products","some","item","id","push","setItem","stringify","shoppingcartToOrder","$router","deleteShoppingCart","ProductsId","map","index","indexOf","splice","shoppingCartPriceTotle","ProductsPrice","price","ProductsPriceTotle","reduce","a","b","handlePageChange","value","computed","filter","searchResult","title","match"],"sourceRoot":"","sources":["D:\\sshstudiocode\\Vue\\vue-3-authentication-jwt-shoppingcart\\src\\components\\package\\Card.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-8\">\r\n                <input type=\"text\" class=\"form-control\" v-model=\"titleSearch\" pl aceholder=\"Search\">\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n                <!-- <button type=\"button\" class=\"btn btn-primary\">\r\n                    待結帳 <span class=\"badge badge-pill badge-success\"> {{shoppingCartTotal}}</span>\r\n                </button>    -->\r\n\r\n\r\n                <!-- Button trigger modal -->\r\n                <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#staticBackdrop\"\r\n                    @click=\"shoppingcartToOrder(allshoppCart); shoppingCartPriceTotle()\">\r\n                    待結帳 <span class=\"badge badge-pill badge-success\"> {{ shoppingCartTotal }}</span>\r\n                </button>\r\n                <!-- Modal -->\r\n                <div class=\"modal fade\" id=\"staticBackdrop\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\"\r\n                    aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                                <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Modal title</h5>\r\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div class=\"modal-body\">\r\n                                <table class=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">商品名稱</th>\r\n                                            <th scope=\"col\">單價</th>\r\n                                            <th scope=\"col\">刪除</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr v-for=\"shoppingCart in allshoppCart\" :key=\"shoppingCart.id\">\r\n                                            <td>{{ shoppingCart.title }}</td>\r\n                                            <td>{{ shoppingCart.price }}</td>\r\n                                            <td>\r\n                                                <button type=\"button\" class=\"btn btn-danger\"\r\n                                                    @click=\"deleteShoppingCart(shoppingCart.id); shoppingCartPriceTotle()\">刪除</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                <div class=\"alert alert-success\" role=\"alert\">\r\n                                    總價:{{ PriceTotle }}\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"modal-footer\">\r\n                                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button type=\"button\" class=\"btn btn-primary\">Understood</button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <h1></h1>\r\n        <div id=\"Products\" class=\"row row-cols-1 row-cols-md-3 g-4\">\r\n            <div class=\"col\" v-for=\"product in ProductsTable\" :key=\"product.id\">\r\n                <div class=\"card h-100\" style=\"width: 17rem;\">\r\n                    <img :src=\"path + product.image\" class=\"card-img-top\" alt=\"\">\r\n                    <!-- `http://localhost:3000/${productImage}` -->\r\n                    <div class=\"card-body\">\r\n                        <h5 class=\"card-title\">{{ product.title }}</h5>\r\n                        <p class=\"card-text\">{{ product.description }}</p>\r\n                        <p class=\"card-text\">{{ product.price }}</p>\r\n                    </div>\r\n                    <div class=\"btn-group\" role=\"group\" aria-label=\"Basic mixed styles example\">\r\n                        <!-- <button @click=\"addShoppingCart(ProductsTable)\" type=\"button\" class=\"btn btn-success\" >購物車</button> -->\r\n                        <!-- 這會抓到全部 -->\r\n                        <button @click=\"addShoppingCart(product)\" type=\"button\" class=\"btn btn-success\">購物車</button>\r\n                        <!-- 這抓單筆 -->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <h1></h1>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <!-- 分頁置中 -->\r\n            <div class=\"col-sm\">\r\n            </div>\r\n            <div class=\"col-sm\">\r\n                <paginate @change=\"handlePageChange\" :per-page=\"pageSize\" pills>\r\n                </paginate>\r\n\r\n            </div>\r\n            <div class=\"col-sm\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// import { thisExpression } from \"@babel/types\";\r\nimport axios from \"axios\";\r\nimport Paginate from 'vuejs-paginate-next';\r\n// 引用axios\r\n\r\nexport default {\r\n\r\n    data() {\r\n        return {\r\n            PriceTotle: 0,\r\n            // PriceTotle: 購物車總價\r\n\r\n            page: 1,\r\n            // page: 目前頁數\r\n\r\n            \r\n\r\n\r\n\r\n            shoppingCartTotal: '',\r\n            // shoppingCartTotal: 購物車總數\r\n            published: true,\r\n            // true:產品上架\r\n            ProductsTable: [],\r\n            // ProductsTable: 產品get資料表\r\n            allshoppCart: [],\r\n            // shoppingCart: 購物車資料表(local)\r\n            shoppingCart: [],\r\n\r\n            titleSearch: '',\r\n            // titleSearch: 搜尋的標題 先給空值 也可以預設值\r\n            path: \"http://192.168.68.60:8082/\"\r\n            // paht: 照片路徑使用\r\n        };\r\n    },\r\n    components:{\r\n        paginate: Paginate,\r\n    },\r\n    \r\n\r\n    mounted:\r\n        function () {\r\n            axios.get(\"http://192.168.68.60:8082/api/products/allProducts\")\r\n                // 發出取得請求\r\n                .then((response) => {\r\n                    // 取得回應後的處理\r\n                    console.log(response);\r\n                    // 這裡的response是API回傳的資料\r\n                    this.ProductsTable = response.data;\r\n\r\n                })\r\n                .catch((error) => {\r\n                    // 發生錯誤時的處理\r\n                    console.log(error);\r\n                });\r\n\r\n\r\n            let shoppingCartTotal = JSON.parse(localStorage.getItem('ShoppingCart'))\r\n            if (localStorage.getItem('ShoppingCart') !== null) {\r\n                this.shoppingCartTotal = shoppingCartTotal.length\r\n                this.allshoppCart = shoppingCartTotal\r\n\r\n            }\r\n            else {\r\n                this.shoppingCartTotal = 0\r\n            }\r\n            // 取得shoppingcart localStorage資料\r\n\r\n        },\r\n\r\n\r\n\r\n    methods: {\r\n        // methods: 方法\r\n        addShoppingCart(i)\r\n        // addShoppingCart: 加入購物車\r\n        // i: 產品資料\r\n        {\r\n            // localStorage.setItem('Products', JSON.stringify(this.ProductsTable))\r\n            // 寫入全部產品資料到localStorage         \r\n            let Products = JSON.parse(localStorage.getItem('ShoppingCart'))\r\n            if (localStorage.getItem('ShoppingCart') !== null)\r\n            // 在localStorage裡面找ShoppingCart 不等於 空值 \r\n            // !==: 不等於\r\n            // null: 空值\r\n            {\r\n                if (Products.some(item => item.id === i.id)) return\r\n                // products.some: 有沒有符合的 https://noob.tw/js-every-some/\r\n                // item.id === i.id: 有沒有相同的id 一樣的話就不加入\r\n                Products.push(i)\r\n                // push: 加入\r\n                localStorage.setItem('ShoppingCart', JSON.stringify(Products))\r\n                // localStorage.setItem: 寫入\r\n                // LocalStorage: 瀏覽器的資料庫(SpopingCart: 購物車)\r\n                // JSON.stringify: 轉成JSON格式\r\n\r\n\r\n            }\r\n            else {\r\n                localStorage.setItem('ShoppingCart', JSON.stringify([i]))\r\n            }\r\n\r\n\r\n            let shoppingCartTotal = JSON.parse(localStorage.getItem('ShoppingCart'))\r\n            return this.shoppingCartTotal = shoppingCartTotal.length, this.allshoppCart = shoppingCartTotal\r\n            // this.shoppingCartTotal: 點擊購物車按鈕後的購物車數量\r\n            // this.allshoppCart: 點擊購物車按鈕後的資料\r\n            // 用觸發事件的產品資料i去找localStorage裡面的ShoppingCart數量\r\n\r\n        },\r\n\r\n        shoppingcartToOrder() {\r\n            if (localStorage.getItem('user') !== null) {\r\n                // localStorage.getItem('user') !== null: localStorage裡面有user\r\n\r\n            }\r\n            else {\r\n                this.$router.push('/login')\r\n                // 沒有user就this.$router.push: 跳轉頁面\r\n            }\r\n        },\r\n        // 先判斷localStorage裡面有沒有user\r\n        // 有的話就跳轉到訂單頁面\r\n        // 沒有的話就跳轉到登入頁面\r\n\r\n        deleteShoppingCart(i) {\r\n            let Products = JSON.parse(localStorage.getItem('ShoppingCart'))\r\n            // 取得localStorage裡面的ShoppingCart資料\r\n            let ProductsId = Products.map(item => item.id)\r\n            // Products.map: 把Products裡面的id取出來\r\n\r\n            let index = ProductsId.indexOf(i)\r\n            // index2: 找到i的位置 \r\n\r\n            // 以下是測試用,看變數的狀態\r\n            // let index = ProductsId\r\n            // index: 找到i的位置\r\n            // let index1 = i\r\n            // indexOf: 找到i的位置\r\n            // 原本用JOSN.parse(localStorage.getItem('ShoppingCart'))取得的資料是陣列,\r\n            // ProductsId取id字串\r\n            // 然後用indexOf找id的位置\r\n            // 最後用splice刪除\r\n\r\n            Products.splice(index, 1)\r\n            // splice: 刪除\r\n            localStorage.setItem('ShoppingCart', JSON.stringify(Products))\r\n            // 寫入localStorage\r\n            let shoppingCartTotal = JSON.parse(localStorage.getItem('ShoppingCart'))\r\n\r\n\r\n\r\n            return this.shoppingCartTotal = shoppingCartTotal.length, this.allshoppCart = shoppingCartTotal\r\n            // this.shoppingCartTotal: 點擊購物車按鈕後的購物車數量\r\n            // this.allshoppCart: 點擊購物車按鈕後的資料\r\n            // 用觸發事件的產品資料i去找localStorage裡面的ShoppingCart數量\r\n\r\n\r\n        },\r\n\r\n        shoppingCartPriceTotle() {\r\n            let Products = JSON.parse(localStorage.getItem('ShoppingCart'))\r\n            // 取得localStorage裡面的ShoppingCart資料\r\n            let ProductsPrice = Products.map(item => item.price)\r\n            // Products.map: 把Products裡面的price取出來\r\n            let ProductsPriceTotle = ProductsPrice.reduce((a, b) => a + b, 0)\r\n            // ProductsPrice.reduce: 把ProductsPrice裡面的值加總\r\n            // a: 前一個值\r\n            // b: 後一個值\r\n            // 0: 初始值\r\n            return this.PriceTotle = ProductsPriceTotle\r\n            // this.shoppingCartPriceTotle: 購物車總價\r\n            // ProductsPriceTotle: 購物車總價\r\n        },\r\n\r\n        handlePageChange(value) {\r\n            this.page = value;\r\n\r\n        }\r\n\r\n\r\n    },\r\n    computed: {\r\n        // computed: 計算屬性\r\n        ProductsTable() {\r\n            // ProductsTable: 資料表\r\n            return this.ProductsTable.filter\r\n                (searchResult => searchResult.title.match(this.titleSearch) && searchResult.published == this.published);\r\n            // return: 一定要有回傳的值\r\n            // this.ProductsTable: 查ProductsTable\r\n            // filter: 篩選\r\n            // searchResult: 搜尋結果            \r\n            // searchResult.title: 搜尋結果的title\r\n            // match: 符合\r\n            // this.titleSearch: 輸入值titleSearch(input v-model=\"titleSearch\")\r\n            // &&: 且\r\n            // searchResult.published == this.published: 搜尋結果的published == 輸入值published(參考data)\r\n        },\r\n\r\n\r\n\r\n\r\n    },\r\n\r\n};\r\n</script>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}