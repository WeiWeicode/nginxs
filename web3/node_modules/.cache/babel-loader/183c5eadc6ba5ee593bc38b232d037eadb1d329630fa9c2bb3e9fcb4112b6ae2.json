{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"Products\",\n  class: \"row row-cols-1 row-cols-md-3 g-4\"\n};\nconst _hoisted_2 = {\n  class: \"card h-100\",\n  style: {\n    \"width\": \"17rem\"\n  }\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  class: \"card-body\"\n};\nconst _hoisted_5 = {\n  class: \"card-text\"\n};\nconst _hoisted_6 = {\n  class: \"card-text\"\n};\nconst _hoisted_7 = {\n  class: \"card-text\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"btn-group\",\n  role: \"group\",\n  \"aria-label\": \"Basic mixed styles example\"\n}, [/*#__PURE__*/_createCommentVNode(\" <button @click=\\\"addShoppingCart(ProductsTable, id)\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\" >購物車</button> \")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_H5 = _resolveComponent(\"H5\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.titleSearch = $event),\n    pl: \"\",\n    aceholder: \"Search\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.titleSearch]])]), _createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.ProductsTable, product => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"col\",\n      key: product.id\n    }, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n      src: $data.path + product.image,\n      class: \"card-img-top\",\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_3), _createCommentVNode(\" `http://localhost:3000/${productImage}` \"), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_H5, {\n      class: \"card-title\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(product.title), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */), _createElementVNode(\"p\", _hoisted_5, _toDisplayString(product.description), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_6, _toDisplayString(product.price), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_7, _toDisplayString(product.published), 1 /* TEXT */)]), _hoisted_8])]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EAISA,EAAE,EAAC,UAAU;EAACC,KAAK,EAAC;;;EAEZA,KAAK,EAAC,YAAY;EAACC,KAAqB,EAArB;IAAA;EAAA;;;;EAGfD,KAAK,EAAC;AAAW;;EAEfA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAW;gCAGxBE,oBAEM;EAFDF,KAAK,EAAC,WAAW;EAACG,IAAI,EAAC,OAAO;EAAC,YAAU,EAAC;iBAC3CC,sIAAgH;;;;6DAhBhIF,oBAEM,8BADFA,oBAAsF;IAA/EG,IAAI,EAAC,MAAM;IAACL,KAAK,EAAC,cAAc;+DAAUM,iBAAW;IAAEC,EAAE,EAAF,EAAE;IAACC,SAAS,EAAC;iDAA1BF,iBAAW,OAEhEJ,oBAiBM,OAjBNO,UAiBM,sBAhBFC,oBAeMC,6BAf6BC,sBAAa,EAAxBC,OAAO;yBAA/BH,oBAeM;MAfDV,KAAK,EAAC,KAAK;MAAmCc,GAAG,EAAED,OAAO,CAACd;QAC5DG,oBAaM,OAbNa,UAaM,GAZFb,oBAA6D;MAAvDc,GAAG,EAAEV,UAAI,GAAGO,OAAO,CAACI,KAAK;MAAEjB,KAAK,EAAC,cAAc;MAACkB,GAAG,EAAC;yCAC1Dd,gEAAgD,EAChDF,oBAMM,OANNiB,UAMM,GALFC,aAA+CC;MAA3CrB,KAAK,EAAC;IAAY;wBAAC,MAAmB,mCAAhBa,OAAO,CAACS,KAAK;;;kCACvCpB,oBAAkD,KAAlDqB,UAAkD,mBAA1BV,OAAO,CAACW,WAAW,kBAC3CtB,oBAA4C,KAA5CuB,UAA4C,mBAApBZ,OAAO,CAACa,KAAK,kBACrCxB,oBAAgD,KAAhDyB,UAAgD,mBAAxBd,OAAO,CAACe,SAAS,oBAG7CC,UAEM","names":["id","class","style","_createElementVNode","role","_createCommentVNode","type","$data","pl","aceholder","_hoisted_1","_createElementBlock","_Fragment","$options","product","key","_hoisted_2","src","image","alt","_hoisted_4","_createVNode","_component_H5","title","_hoisted_5","description","_hoisted_6","price","_hoisted_7","published","_hoisted_8"],"sourceRoot":"","sources":["D:\\sshstudiocode\\Vue\\vue-3-authentication-jwt\\src\\components\\package\\Card.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <input type=\"text\" class=\"form-control\" v-model=\"titleSearch\" pl aceholder=\"Search\" />\r\n    </div>\r\n    <div id=\"Products\" class=\"row row-cols-1 row-cols-md-3 g-4\">\r\n        <div class=\"col\" v-for=\"product in ProductsTable\" :key=\"product.id\" >\r\n            <div class=\"card h-100\" style=\"width: 17rem;\">\r\n                <img :src=\"path + product.image\" class=\"card-img-top\" alt=\"\">\r\n                <!-- `http://localhost:3000/${productImage}` -->\r\n                <div class=\"card-body\">\r\n                    <H5 class=\"card-title\">{{ product.title }}</H5>\r\n                    <p class=\"card-text\">{{ product.description }}</p>\r\n                    <p class=\"card-text\">{{ product.price }}</p>\r\n                    <p class=\"card-text\">{{ product.published }}</p>\r\n                    \r\n                </div>\r\n                <div class=\"btn-group\" role=\"group\" aria-label=\"Basic mixed styles example\">\r\n                    <!-- <button @click=\"addShoppingCart(ProductsTable, id)\" type=\"button\" class=\"btn btn-success\" >購物車</button> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport { thisExpression } from \"@babel/types\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\n// 引用axios\r\nexport default {\r\n    \r\n    data() {\r\n        return {\r\n            id: '',\r\n            title: '',\r\n           \r\n            // price: \"\",\r\n            // description: \"\",            \r\n            // image: \"\",\r\n            published: true,\r\n            // true:產品上架\r\n            ProductsTable: [],\r\n            // ProductsTable: 產品get資料表\r\n            titleSearch: '',            \r\n            // titleSearch: 搜尋的標題 先給空值 也可以預設值\r\n            path: \"http://192.168.68.60:8082/\"\r\n            // paht: 照片路徑使用\r\n        };\r\n    },\r\n\r\n    mounted: \r\n    function () {\r\n        axios\r\n            .get(\"http://192.168.68.60:8082/api/products/allProducts\")\r\n            // 發出取得請求\r\n            .then((response) => {\r\n                // 取得回應後的處理\r\n                console.log(response);\r\n                // 這裡的response是API回傳的資料\r\n                this.ProductsTable = response.data;\r\n\r\n            })\r\n            .catch((error) => {\r\n                // 發生錯誤時的處理\r\n                console.log(error);\r\n            });\r\n    },\r\n\r\n    methods:{\r\n        addShoppingCart(title) {\r\n            // localStorage.setItem('Products', JSON.stringify(this.ProductsTable))\r\n            // 寫入全部產品資料到localStorage\r\n            // let title  = this.ProductsTable.filter((item) => item.title === this.title)\r\n            \r\n            // shoppingCart = this.ProductsTable.value.push({\r\n            //     id: this.id,\r\n            //     title: this.title\r\n            // })\r\n\r\n            localStorage.setItem('Products', JSON.stringify(title))\r\n            // 寫入單一產品資料到localStorage\r\n\r\n        },\r\n    },\r\n    computed: {\r\n        // computed: 計算屬性\r\n        ProductsTable() {\r\n            // ProductsTable: 資料表\r\n            return this.ProductsTable.filter\r\n            (searchResult => searchResult.title.match(this.titleSearch) && searchResult.published == this.published);\r\n            // return: 一定要有回傳的值\r\n            // this.ProductsTable: 查ProductsTable\r\n            // filter: 篩選\r\n            // searchResult: 搜尋結果            \r\n            // searchResult.title: 搜尋結果的title\r\n            // match: 符合\r\n            // this.titleSearch: 輸入值titleSearch(input v-model=\"titleSearch\")\r\n            // &&: 且\r\n            // searchResult.published == this.published: 搜尋結果的published == 輸入值published(參考data)\r\n        }\r\n    },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}