{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Form, Field, ErrorMessage } from \"vee-validate\";\nimport * as yup from \"yup\";\n//  這個頁面有一個Form Field: username& password。我們使用VeeValidate 4.x來驗證輸入。如果存在無效字段，我們將顯示錯誤消息。\n//  yup: 一個JavaScript對象驗證器和對象模式解析器。在「Submit」與「實際送出」之間，加入一個「檢核」的流程。\n\nexport default {\n  name: \"Login\",\n  components: {\n    Form,\n    Field,\n    ErrorMessage\n  },\n  // form: 這個頁面有一個Form Field: username& password。我們使用VeeValidate 4.x來驗證輸入。如果存在無效字段，我們將顯示錯誤消息。\n  // field: 用於輸入的欄位\n  // errorMessage: 用於顯示錯誤訊息的元件\n  // yup綁定到data/schema\n\n  data() {\n    const schema = yup.object().shape({\n      username: yup.string().required(\"Username is required!\"),\n      password: yup.string().required(\"Password is required!\")\n    });\n    // 提醒文字 username: 必填 password: 必填\n\n    return {\n      loading: false,\n      message: \"\",\n      schema\n    };\n    // loading: 是否正在載入\n    // message: 顯示錯誤訊息\n    // schema: yup綁定到data/schema\n  },\n\n  computed: {\n    loggedIn() {\n      return this.$store.state.auth.status.loggedIn;\n    }\n    // loggedIn: 是否已登入\n    // $store.state.auth.status.loggedIn: 取得登入狀態\n  },\n\n  created() {\n    if (this.loggedIn) {\n      this.$router.push(\"/profile\");\n    }\n    // this.loggedIn: 判斷是否已登入\n    // 我們使用 Vuex Store 檢查用戶登錄狀態：this.$store.state.auth.status.loggedIn。如果狀態是true，我們使用 Vue Router 將用戶定向到個人資料頁面：\n  },\n\n  methods: {\n    handleLogin(user) {\n      // 在handleLogin()函數中，我們將'auth/login'Action 派發到 Vuex Store。如果登錄成功，進入個人資料頁面，否則顯示錯誤信息。\n      this.loading = true;\n      // this.loading: 是否正在載入 true: 載入中\n\n      this.$store.dispatch(\"auth/login\", user).then(\n      // this.$store.dispatch: 派發Action\n      // auth/login: Action名稱\n      // user: 傳入的參數        \n\n      () => {\n        this.$router.push(\"/profile\");\n      },\n      // $router.push: 導向頁面\n      // /profile: 頁面路徑\n\n      error => {\n        // error: 錯誤訊息\n        this.loading = false;\n        // this.loading: 是否正在載入 false: 不在載入\n        this.message =\n        // this.message: 顯示錯誤訊息\n        error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AAkCA,SAASA,IAAI,EAAEC,KAAK,EAAEC,YAAW,QAAS,cAAc;AACxD,OAAO,KAAKC,GAAE,MAAO,KAAK;AAC1B;AACA;;AAEA,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,UAAU,EAAE;IACVL,IAAI;IACJC,KAAK;IACLC;EACF,CAAC;EACD;EACA;EACA;EACA;;EAEAI,IAAI,GAAG;IACL,MAAMC,MAAK,GAAIJ,GAAG,CAACK,MAAM,EAAE,CAACC,KAAK,CAAC;MAChCC,QAAQ,EAAEP,GAAG,CAACQ,MAAM,EAAE,CAACC,QAAQ,CAAC,uBAAuB,CAAC;MACxDC,QAAQ,EAAEV,GAAG,CAACQ,MAAM,EAAE,CAACC,QAAQ,CAAC,uBAAuB;IACzD,CAAC,CAAC;IACF;;IAEA,OAAO;MACLE,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE,EAAE;MACXR;IACF,CAAC;IACD;IACA;IACA;EAEF,CAAC;;EACDS,QAAQ,EAAE;IACRC,QAAQ,GAAG;MACT,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,CAACJ,QAAQ;IAC/C;IACA;IACA;EACF,CAAC;;EAEDK,OAAO,GAAG;IACR,IAAI,IAAI,CAACL,QAAQ,EAAE;MACjB,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC;IAC/B;IACA;IACA;EACF,CAAC;;EACDC,OAAO,EAAE;IACPC,WAAW,CAACC,IAAI,EAAE;MAChB;MACA,IAAI,CAACb,OAAM,GAAI,IAAI;MACnB;;MAEA,IAAI,CAACI,MAAM,CAACU,QAAQ,CAAC,YAAY,EAAED,IAAI,CAAC,CAACE,IAAI;MAC3C;MACA;MACA;;MAEA,MAAM;QACJ,IAAI,CAACN,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC;MAC/B,CAAC;MACD;MACA;;MAGCM,KAAK,IAAK;QACT;QACA,IAAI,CAAChB,OAAM,GAAI,KAAK;QACpB;QACA,IAAI,CAACC,OAAM;QACX;QACGe,KAAK,CAACC,QAAO,IACZD,KAAK,CAACC,QAAQ,CAACzB,IAAG,IAClBwB,KAAK,CAACC,QAAQ,CAACzB,IAAI,CAACS,OAAO,IAC7Be,KAAK,CAACf,OAAM,IACZe,KAAK,CAACE,QAAQ,EAAE;MACpB,EACD;IACH;EACF;AACF,CAAC","names":["Form","Field","ErrorMessage","yup","name","components","data","schema","object","shape","username","string","required","password","loading","message","computed","loggedIn","$store","state","auth","status","created","$router","push","methods","handleLogin","user","dispatch","then","error","response","toString"],"sourceRoot":"","sources":["D:\\sshstudiocode\\Vue\\vue-3-authentication-jwt\\src\\components\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"col-md-12\">\r\n    <div class=\"card card-container\">\r\n      <img id=\"profile-img\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" class=\"profile-img-card\" />\r\n      <Form @submit=\"handleLogin\" :validation-schema=\"schema\">        \r\n        <div class=\"form-group\">\r\n          <label for=\"username\">Username</label>\r\n          <Field name=\"username\" type=\"text\" class=\"form-control\" />\r\n          <ErrorMessage name=\"username\" class=\"error-feedback\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <Field name=\"password\" type=\"password\" class=\"form-control\" />\r\n          <ErrorMessage name=\"password\" class=\"error-feedback\" />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <button class=\"btn btn-primary btn-block\" :disabled=\"loading\">\r\n            <span v-show=\"loading\" class=\"spinner-border spinner-border-sm\"></span>\r\n            <span>Login</span>\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <div v-if=\"message\" class=\"alert alert-danger\" role=\"alert\">\r\n            {{ message }}\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport { Form, Field, ErrorMessage } from \"vee-validate\";\r\nimport * as yup from \"yup\";\r\n//  這個頁面有一個Form Field: username& password。我們使用VeeValidate 4.x來驗證輸入。如果存在無效字段，我們將顯示錯誤消息。\r\n//  yup: 一個JavaScript對象驗證器和對象模式解析器。在「Submit」與「實際送出」之間，加入一個「檢核」的流程。\r\n\r\nexport default {\r\n  name: \"Login\",\r\n  components: {\r\n    Form,\r\n    Field,\r\n    ErrorMessage,\r\n  },\r\n  // form: 這個頁面有一個Form Field: username& password。我們使用VeeValidate 4.x來驗證輸入。如果存在無效字段，我們將顯示錯誤消息。\r\n  // field: 用於輸入的欄位\r\n  // errorMessage: 用於顯示錯誤訊息的元件\r\n  // yup綁定到data/schema\r\n\r\n  data() {\r\n    const schema = yup.object().shape({\r\n      username: yup.string().required(\"Username is required!\"),\r\n      password: yup.string().required(\"Password is required!\"),\r\n    });\r\n    // 提醒文字 username: 必填 password: 必填\r\n\r\n    return {\r\n      loading: false,\r\n      message: \"\",\r\n      schema,\r\n    };\r\n    // loading: 是否正在載入\r\n    // message: 顯示錯誤訊息\r\n    // schema: yup綁定到data/schema\r\n\r\n  },\r\n  computed: {\r\n    loggedIn() {\r\n      return this.$store.state.auth.status.loggedIn;\r\n    },\r\n    // loggedIn: 是否已登入\r\n    // $store.state.auth.status.loggedIn: 取得登入狀態\r\n  },\r\n\r\n  created() {\r\n    if (this.loggedIn) {\r\n      this.$router.push(\"/profile\");\r\n    }\r\n    // this.loggedIn: 判斷是否已登入\r\n    // 我們使用 Vuex Store 檢查用戶登錄狀態：this.$store.state.auth.status.loggedIn。如果狀態是true，我們使用 Vue Router 將用戶定向到個人資料頁面：\r\n  },\r\n  methods: {\r\n    handleLogin(user) {\r\n      // 在handleLogin()函數中，我們將'auth/login'Action 派發到 Vuex Store。如果登錄成功，進入個人資料頁面，否則顯示錯誤信息。\r\n      this.loading = true;\r\n      // this.loading: 是否正在載入 true: 載入中\r\n\r\n      this.$store.dispatch(\"auth/login\", user).then(\r\n        // this.$store.dispatch: 派發Action\r\n        // auth/login: Action名稱\r\n        // user: 傳入的參數        \r\n\r\n        () => {\r\n          this.$router.push(\"/profile\");\r\n        },\r\n        // $router.push: 導向頁面\r\n        // /profile: 頁面路徑\r\n\r\n\r\n        (error) => {\r\n          // error: 錯誤訊息\r\n          this.loading = false;\r\n          // this.loading: 是否正在載入 false: 不在載入\r\n          this.message =\r\n          // this.message: 顯示錯誤訊息\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n        }\r\n      );\r\n    },\r\n  },\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\nlabel {\r\n  display: block;\r\n  margin-top: 10px;\r\n}\r\n\r\n.card-container.card {\r\n  max-width: 350px !important;\r\n  padding: 40px 40px;\r\n}\r\n\r\n.card {\r\n  background-color: #f7f7f7;\r\n  padding: 20px 25px 30px;\r\n  margin: 0 auto 25px;\r\n  margin-top: 50px;\r\n  -moz-border-radius: 2px;\r\n  -webkit-border-radius: 2px;\r\n  border-radius: 2px;\r\n  -moz-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\r\n  -webkit-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\r\n  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.profile-img-card {\r\n  width: 96px;\r\n  height: 96px;\r\n  margin: 0 auto 10px;\r\n  display: block;\r\n  -moz-border-radius: 50%;\r\n  -webkit-border-radius: 50%;\r\n  border-radius: 50%;\r\n}\r\n\r\n.error-feedback {\r\n  color: red;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}